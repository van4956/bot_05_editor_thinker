import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='  -  [%(asctime)s] #%(levelname)-5s -  %(name)s:%(lineno)d  -  %(message)s')
logger = logging.getLogger(__name__)

import asyncio
import psutil # —ç—Ç–æ—Ç –º–æ–¥—É–ª—å –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ, —Ç–∞–∫—É—é –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –∏ CPU

from aiogram import Bot, Dispatcher, types
from aiogram.fsm.strategy import FSMStrategy
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

from config_data.config import Config, load_config
from handlers import admin, start, editor
from common.comands import private
from middlewares import counter


# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é config
config: Config = load_config()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
storage = MemoryStorage()  # –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏, –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –≤—Å—ë —Å—Ç–∏—Ä–∞–µ—Ç—Å—è (–¥–ª—è —Ç–µ—Å—Ç–æ–≤ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)

logger.info('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä')
bot = Bot(token=config.tg_bot.token,
          default=DefaultBotProperties(parse_mode=ParseMode.HTML,
                                       link_preview=None,
                                       link_preview_is_disabled=None,
                                       link_preview_prefer_large_media=None,
                                       link_preview_prefer_small_media=None,
                                       link_preview_show_above_text=None))
bot.owner = config.tg_bot.owner
bot.admin_list = config.tg_bot.admin_list
bot.home_group = config.tg_bot.home_group
bot.work_group = config.tg_bot.work_group


dp = Dispatcher(fsm_strategy=FSMStrategy.USER_IN_CHAT, storage=storage)


# –ü–æ–º–µ—â–∞–µ–º –Ω—É–∂–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –≤ workflow_data –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
chanel_dict = config.tg_bot.channels
dp.workflow_data.update({'chanel_dict': chanel_dict})

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∏–¥–ª–≤–∞—Ä–∏
dp.update.outer_middleware(counter.CounterMiddleware())  # –ø—Ä–æ—Å—Ç–æ–π —Å—á–µ—Ç—á–∏–∫

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
dp.include_router(start.start_router)
dp.include_router(admin.admin_router)
dp.include_router(editor.editor_router)



# –¢–∏–ø—ã –∞–ø–¥–µ–π—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º –æ—Ç–ª–∞–≤–ª–∏–≤–∞—Ç—å –±–æ—Ç–æ–º
ALLOWED_UPDATES = dp.resolve_used_update_types()  # –û—Ç–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–æ–±—ã—Ç–∏—è –ø–æ —Ä–æ—É—Ç–µ—Ä–∞–º

# –§—É–Ω–∫—Ü–∏—è —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
async def on_startup():
    bot_info = await bot.get_me()
    bot_username = bot_info.username
    bot.username = bot_username
    await bot.send_message(chat_id = bot.home_group[0], text = f"ü§ñ  @{bot_username}  -  –∑–∞–ø—É—â–µ–Ω!")

# –§—É–Ω–∫—Ü–∏—è —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
async def on_shutdown():
    bot_info = await bot.get_me()
    bot_username = bot_info.username
    await bot.send_message(chat_id = bot.home_group[0], text = f"‚ò†Ô∏è  @{bot_username}  -  –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")

# –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
async def monitor_resources():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –ª–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤"""
    try:
        process = psutil.Process()
        memory_usage = process.memory_info().rss / 1024 / 1024  # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –ú–ë

        if memory_usage > config.memory_limit:
            logger.warning("–í—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏: %.2fMB (–ª–∏–º–∏—Ç: %sMB)", memory_usage, config.memory_limit)

        # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU
        cpu_percent = process.cpu_percent(interval=1)
        if cpu_percent > 80:
            logger.warning("–í—ã—Å–æ–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ CPU: %s%%", cpu_percent)

    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ—Å—É—Ä—Å–æ–≤: %s", e)

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main() -> None:

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ/–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞
    dp.startup.register(on_startup)
    dp.shutdown.register(on_shutdown)

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –∞–ø–¥–µ–π—Ç—ã - —É–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫–∏ (—Ç–æ —á—Ç–æ –±–æ—Ç –ø–æ–ª—É—á–∏–ª –ø–æ–∫–∞ —Å–ø–∞–ª)
    await bot.delete_webhook(drop_pending_updates=True)

    # –£–¥–∞–ª—è–µ–º —Ä–∞–Ω–µ–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ—Ç–∞ –≤–æ –≤—Å–µ—Ö –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö
    await bot.delete_my_commands(scope=types.BotCommandScopeAllPrivateChats())

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã
    await bot.set_my_commands(commands=private, scope=types.BotCommandScopeAllPrivateChats())


    # –ó–∞–ø—É—Å–∫–∞–µ–º polling
    try:
        await dp.start_polling(bot,
                               allowed_updates=ALLOWED_UPDATES,)
                            #    skip_updates=False)  # –ï—Å–ª–∏ –±–æ—Ç –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–ª–∞—Ç–µ–∂–∏, –ù–ï –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!

        while True:
            await monitor_resources()
            await asyncio.sleep(300)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

    except Exception as e:
        logger.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main: %s", e)
        await bot.send_message(chat_id=bot.home_group[0],
                                text=f"‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞ @<b>{bot.username}</b>: {e}")

    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())
